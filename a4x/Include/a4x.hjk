#INCLUDE "<inc>/Rtl.hjk"
#INCLUDE "<inc>/a4xClient.hjk"

#DEFINE XR_ROM_START 0xFFFE0000

#DEFINE A4X_SECTOR_BUFFER 0x2000

#DEFINE FW_MONITOR_HEIGHT 24

FNPTR FwCioWriteF (
    IN byte : UWORD,
)

FNPTR FwCioReadF () : UWORD

STRUCT FwCioBlock
    Write : FwCioWriteF,
    Read : FwCioReadF,
END

EXTERN FN FwCioPutCharacter (
    IN byte : UWORD,
)

EXTERN FN FwBumpAllocate (
    IN bytes : UWORD,
) : ^VOID

EXTERN FN FwCioGetCharacter () : UWORD

EXTERN FN FwReadDisk (
    IN partition : ^FwDiskPartitionInfo,
    IN buffer : ^VOID,
    IN sector : ULONG,
    IN count : ULONG,
) : UWORD

EXTERN FN FwInitializeDiskPartitions (
    IN disk : ^FwDksInfoRecord,
    IN partition : ^FwDiskPartitionInfo,
)

EXTERN FN FwIdle (
    IN count : UWORD,
)

EXTERN FN FwSetNvramVariable (
    IN name : ^UBYTE,
    IN contents : ^UBYTE,
) : UWORD

EXTERN FN FwSetNvramVariableToNumber (
    IN name : ^UBYTE,
    IN number : UWORD,
) : UWORD

EXTERN FN FwGetNvramVariableAsNumber (
    IN name : ^UBYTE,
    OUT num : UWORD,
) : UWORD

EXTERN FN FwGetNvramVariable (
    IN name : ^UBYTE,
    IN buffer : ^UBYTE,
    IN bufsize : UWORD,
) : UWORD

EXTERN FN FwGetNvramVariableWithDefault (
    IN name : ^UBYTE,
    IN buffer : ^UBYTE,
    IN default : ^UBYTE,
    IN bufsize : UWORD,
) : UWORD

EXTERN FN FwGetNvramVariableAsNumberWithDefault (
    IN name : ^UBYTE,
    IN default : UWORD,
    OUT number : UWORD,
) : UWORD

EXTERN FN FwDeleteNvramVariable (
    IN name : ^UBYTE,
) : UWORD

EXTERN FN FwResetNvram ()

EXTERN FN FwListNvramVariables ()

EXTERN FN FwDiskNameToNumbers (
    IN name : ^UBYTE,
    OUT diskid : UWORD,
    OUT partid : UWORD,
) : UWORD

EXTERN FN FwGetPartitionByName (
    IN name : ^UBYTE,
) : ^FwDiskPartitionInfo

EXTERN FN FwBootPartition (
    IN partition : ^FwDiskPartitionInfo,
)

EXTERN FN FwAutoBoot ()

EXTERN FN FwPaginate () : UWORD

EXTERN FN FwResetPagination ()

EXTERN FN FwKeyboardReadScancode () : UWORD

EXTERN FN FwxSweepDcache ()

EXTERN FN FwxHalt ()

EXTERN FN FwxReset ()

EXTERN FN FwxGetProcessorId () : UWORD

EXTERN FN FwxFlushWriteBuffer ()

EXTERN FN FwxMemoryBarrier ()

EXTERN FN FwCrash (
    IN fmt : ^UBYTE,
    ... argv argc
)

FNPTR FwBusErrorF ()

EXTERN FwBusErrorCallback : FwBusErrorF

EXTERN FwInitializing : UBYTE

EXTERN FwMachineTypeString : ^UBYTE[XR_TYPE_MAX]

EXTERN FwSelectedBootPartition : ^FwDiskPartitionInfo

EXTERN FwBootableTable : ^FwDiskPartitionInfo[FW_DISK_MAX * FW_PARTITION_MAX]

FNPTR FwIpiF (
    IN context : ^VOID,
)

EXTERN FN FwSendIpi (
    IN targetid : ULONG,
    IN function : FwIpiF,
    IN context : ^VOID
) : UBYTE

STRUCT FwIpiPacket
    Function : FwIpiF,
    Context : ^VOID,
    Acknowledged : ULONG,
END

STRUCT FwExceptionRecord
    t0 : ULONG,
    t1 : ULONG,
    t2 : ULONG,
    t3 : ULONG,
    t4 : ULONG,
    t5 : ULONG,
    a0 : ULONG,
    a1 : ULONG,
    a2 : ULONG,
    a3 : ULONG,
    s0 : ULONG,
    s1 : ULONG,
    s2 : ULONG,
    s3 : ULONG,
    s4 : ULONG,
    s5 : ULONG,
    s6 : ULONG,
    s7 : ULONG,
    s8 : ULONG,
    s9 : ULONG,
    s10 : ULONG,
    s11 : ULONG,
    s12 : ULONG,
    s13 : ULONG,
    s14 : ULONG,
    s15 : ULONG,
    s16 : ULONG,
    s17 : ULONG,
    Lr : ULONG,
    Epc : ULONG,
END

EXTERN FwDeviceDatabase : FwDeviceDatabaseRecord

#DEFINE IO_LSIC_BASE 0xF8030000
#DEFINE IO_LSIC_GAP 32

STRUCT PACKED IoLsic
    Mask0 : ULONG,
    Mask1 : ULONG,
    Pending0 : ULONG,
    Pending1 : ULONG,
    ClaimComplete : ULONG,
    Ipl : ULONG,
    Reserved0 : ULONG,
    Reserved1 : ULONG,
END

STRUCT PACKED IoLsicTable
    Table : IoLsic[8],
END

#DEFINE IO_RTC_CMD 0xF8000080
#DEFINE IO_RTC_DATA 0xF8000084

#DEFINE IO_SERIAL_CMD 0xF8000040
#DEFINE IO_SERIAL_DATA 0xF8000044

#DEFINE IO_APT_MAGIC 0x4E4D494D

STRUCT PACKED IoAptEntry
    Label : UBYTE[8],
    SectorCount : ULONG,
    Status : ULONG,
END

STRUCT PACKED IoAptBootBlock
    BootCode : UBYTE[15],
    FfIfVariant : UBYTE,
    Partitions : IoAptEntry[8],
    Magic : ULONG,
    Label : UBYTE[16],
END

#DEFINE IO_APT_OS_RECORD_MAGIC 0x45544E41

STRUCT PACKED IoAptOsRecord
    Magic : ULONG,
    OsName : UBYTE[16],
    BootstrapSector : ULONG,
    BootstrapCount : ULONG,
END

#DEFINE IO_NVRAM_BASE 0xF8001000
#DEFINE IO_NVRAM_MAGIC 0x5C001CA7
#DEFINE IO_NVRAM_VAR_COUNT 31

#DEFINE IO_AMTSU_BASE 0xF80000C0

STRUCT PACKED IoAmtsu
    Select : ULONG,
    Mid : ULONG,
    Cmd : ULONG,
    Data0 : ULONG,
    Data1 : ULONG,
END

#DEFINE IO_EBUS_BASE 0xC0000000
#DEFINE IO_EBUS_SLOT_SPACE [(128 * 1024 * 1024)]
#DEFINE IO_EBUS_MAGIC 0x0C007CA1

STRUCT PACKED IoEbusSlotInfo
    Magic : ULONG,
    BoardId : ULONG,
    Name : UBYTE[16],
END