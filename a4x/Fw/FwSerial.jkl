//
// Implements the barebones serial character I/O driver.
//

#INCLUDE "<inc>/a4x.hjk"

FN (FwCioWriteF) FwSerialWrite (
    IN byte : UWORD,
)

    // Write a character to the serial port.

    cmdport := CAST IO_SERIAL_CMD TO ^UBYTE
    dataport := CAST IO_SERIAL_DATA TO ^UBYTE

    WHILE cmdport^ DO
        BARRIER
    END

    dataport^ = byte

    BARRIER
END

FN (FwCioReadF) FwSerialRead () : UWORD

    // Read a character from the serial port.
    // Non-blocking. Return -1 if none available.

    dataport := CAST IO_SERIAL_DATA TO ^UINT

    char := dataport^

    IF char == 0xFFFF THEN
        RETURN -1
    END

    RETURN char
END

// Force the table into the text section so that it stays in ROM.

#SECTION "text"
PUBLIC FwSerialCioBlock : FwCioBlock = {
    [Write] = &FwSerialWrite,
    [Read] = &FwSerialRead,
}

FN FwSerialInitialize ()

    // Initialize the serial port.

    // XXX Do nothing.
END